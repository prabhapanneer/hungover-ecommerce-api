buildscript {
    ext {
        springBootVersion = '2.4.0'
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3"
    }
}
plugins {
    id "jacoco"
    id "java"
    id "eclipse"
    id 'org.sonarqube' version '3.3'
}

sonarqube {
  properties {
    property "sonar.projectKey", "cnw-bitbucket-ws_hungover-ecommerce-api_AYqSREjjQFV3ZNqsh0yW"
    property "sonar.projectName", "hungover-ecommerce-api"
    property 'sonar.projectVersion', '1.0'
    property 'sonar.sources', 'src/main/java'
    property 'sonar.tests', 'src/test/java'
    property 'sonar.java.coveragePlugin', 'jacoco'
  }
}

apply plugin: 'war'
apply plugin: 'base'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "jacoco"
apply plugin: "org.sonarqube"
apply plugin: 'maven-publish'

jacoco {
    toolVersion = "0.7.9"
    reportsDir = file("$buildDir/customJacocoReportDir")

}
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}
jar {
    baseName 'hungover'
}

apply from: 'build-utils/gradle_tasks/repositories.gradle'
apply plugin: 'io.spring.dependency-management'
apply from: 'build-utils/gradle_tasks/repositories.gradle'
apply from: 'build-utils/gradle_tasks/increment_version.gradle'
apply from: 'build-utils/gradle_tasks/build_dockerfile.gradle'

ext {
    mapstructVersion = "1.3.1.Final"
    generatedMapperSourcesDir = "${buildDir}/generated-src/mapstruct/main"
    set('azureVersion', "3.5.0")
}

dependencies {
	implementation(group: 'hungover', name: 'hungover-core', version: '0.0.1-SNAPSHOT', changing: true)
    implementation(group: 'hungover', name: 'hungover-common', version: '0.0.1-SNAPSHOT', changing: true)
    
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-velocity', version: '1.4.7.RELEASE'
    implementation group: 'org.apache.velocity', name: 'velocity', version: '1.7'	
	implementation group: 'org.apache.velocity', name: 'velocity-tools', version: '2.0'
    implementation group: 'org.hibernate', name: 'hibernate-gradle-plugin', version: '5.2.10.Final'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.0.RELEASE'
    implementation group: 'org.apache.commons', name: 'commons-jcs3-core', version: '3.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.13'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.4'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.sendgrid:sendgrid-java:4.1.0'

    implementation group: 'org.json', name: 'json', version: '20211205'

    //JUnits 5
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
//    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation('org.mockito:mockito-core:3.12.4') {
        exclude group: 'org.mockito', module: 'mockito-all'
    }
//    testImplementation group: 'org.powermock', name: 'powermock-api-mockito', version: '1.7.4'
    testImplementation('org.powermock:powermock-api-mockito2:2.0.9') {
        exclude group: 'org.mockito', module: 'mockito-all'
    }

    testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.9'


}

jacoco {
    toolVersion = "0.8.6"
}
test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

